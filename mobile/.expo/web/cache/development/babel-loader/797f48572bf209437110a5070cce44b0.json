{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\Curso FS\\\\projeto-ONG\\\\mobile\\\\src\\\\pages\\\\incidents\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport api from \"../../services/api\";\nimport { Feather } from \"@expo/vector-icons\";\nimport logoImg from \"../../assets/logo.png\";\nimport style from \"./style\";\nexport default function Incidents() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pages = _useState6[0],\n      setPages = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var res;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('incidents'));\n\n          case 7:\n            res = _context.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(res.data)));\n            setTotal(res.headers['x-total-count']);\n            setPages(pages + 1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  });\n  return React.createElement(View, {\n    style: style.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: style.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: style.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }\n  }, total, \" casos\"))), React.createElement(Text, {\n    style: style.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Beeeem Vinnnndo!\"), React.createElement(Text, {\n    style: style.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Escolha um dos casos abaixo:\"), React.createElement(FlatList, {\n    data: incidents,\n    style: style.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    onEndReached: loadi,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: style.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: style.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: style.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, incident.name), React.createElement(Text, {\n        style: style.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"Caso:\"), React.createElement(Text, {\n        style: style.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, incident.title), React.createElement(Text, {\n        style: style.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"Valor:\"), React.createElement(Text, {\n        style: style.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: style.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: style.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#e02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/alexa/Desktop/Curso FS/projeto-ONG/mobile/src/pages/incidents/index.js"],"names":["React","useEffect","useState","useNavigation","api","Feather","logoImg","style","Incidents","incidents","setIncidents","total","setTotal","pages","setPages","loading","setLoading","navigation","navigateToDetail","incident","navigate","loadIncidents","length","get","res","data","headers","container","header","headerText","headerTextBold","title","description","incidentList","String","id","loadi","item","incidentProperty","incidentValue","name","Intl","NumberFormat","currency","format","value","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport {View, Text, Image, TouchableOpacity, FlatList} from 'react-native';\r\nimport {useNavigation} from '@react-navigation/native'\r\nimport api from '../../services/api'\r\n\r\n\r\nimport {Feather} from \"@expo/vector-icons\"\r\nimport logoImg from '../../assets/logo.png'\r\n\r\nimport style from './style'\r\n\r\nexport default function Incidents(){\r\n\r\n    const[incidents, setIncidents] = useState('');\r\n    const[total, setTotal] = useState(0);\r\n    const[pages, setPages] = useState(1);\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    function navigateToDetail(incident){\r\n        navigation.navigate('Detail', {incident})\r\n    }\r\n\r\n    async function loadIncidents() {\r\n\r\n        if(loading){\r\n            return\r\n        }\r\n\r\n        if(total > 0 && incidents.length === total){\r\n            return\r\n        }\r\n        \r\n        setLoading(true);\r\n\r\n        const res = await api.get('incidents');\r\n\r\n        setIncidents([...incidents, ...res.data]);\r\n        setTotal(res.headers['x-total-count'])\r\n        setPages(pages + 1);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() =>{\r\n        loadIncidents();\r\n    })\r\n\r\n    return(\r\n        \r\n        <View style={style.container}>\r\n            <View style={style.header}>\r\n                <Image source={logoImg}/>\r\n                <Text style={style.headerText}>\r\n                    Total de <Text style={style.headerTextBold}>{total} casos</Text>\r\n                </Text>\r\n            </View>\r\n            <Text style={style.title}>Beeeem Vinnnndo!</Text>\r\n            <Text style={style.description}>Escolha um dos casos abaixo:</Text>\r\n\r\n            <FlatList \r\n            data={incidents}\r\n            style={style.incidentList}\r\n            keyExtractor={incident => String(incident.id)}\r\n            showsVerticalScrollIndicator={false}\r\n            onEndReached={loadi}\r\n            renderItem={({item: incident}) =>(\r\n                <View style={style.incident}>\r\n\r\n                    <Text style={style.incidentProperty}>ONG:</Text>\r\n                    <Text style={style.incidentValue}>{incident.name}</Text>\r\n\r\n                    <Text style={style.incidentProperty}>Caso:</Text>\r\n                    <Text style={style.incidentValue}>{incident.title}</Text>\r\n                    \r\n                    <Text style={style.incidentProperty}>Valor:</Text>\r\n                    <Text style={style.incidentValue}>\r\n                        {Intl.NumberFormat('pt-BR',{\r\n                            style:'currency', \r\n                            currency:'BRL'})\r\n                            .format(incident.value)}\r\n                            </Text>\r\n                \r\n                    <TouchableOpacity \r\n                    style={style.detailsButton}\r\n                    onPress={() =>navigateToDetail(incident)}\r\n                    >\r\n                        <Text style={style.detailsButtonText}>Ver mais detalhes</Text>\r\n                        <Feather name='arrow-right' size={16} color=\"#e02041\"/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n            )}/>\r\n\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}